name: Tests

on: [push, pull_request]

jobs:
  #Linting:
    #runs-on: ubuntu-latest

    #steps:
      #- uses: actions/checkout@v2
      #- name: Set up Python 3.8
        #uses: actions/setup-python@v1
        #with:
          #python-version: 3.8
      #- name: Linting
        #run: |
          #pip install pre-commit
          #pre-commit run --all-files
  Linux:
    #needs: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get full python version
      id: full-python-version
      run: |
        echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install and set up Poetry
      run: |
        curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
        python get-poetry.py --preview -y
        source $HOME/.poetry/env
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Upgrade pip
      run: |
        source $HOME/.poetry/env
        poetry run python -m pip install pip -U
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install -vvv
    - name: Test Pure Python
      run: |
        source $HOME/.poetry/env
        PENDULUM_EXTENSIONS=0 poetry run pytest -q tests
    - name: Test
      run: |
        source $HOME/.poetry/env
        poetry run pytest -q tests
        poetry install
        
  manylinux-arm64:
    name: "${{ matrix.PYTHON.ABI_VERSION }} manylinux2014-aarch64"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON:
          - {VERSION: "cp36-cp36m", ABI_VERSION: 'cp36'}
    steps:
      - uses: actions/checkout@v2
      - run: |
          docker run --rm --privileged hypriot/qemu-register
      - name: install dependencies      
        uses: docker://quay.io/pypa/manylinux2014_aarch64  
        with:
          args: |
              bash -c "curl -fsS -o get-poetry.py https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py;
              echo "annu0";
              yum install -y python3;
              yum install -y sudo;
              echo "annu-anything";
              sudo rm -f /usr/bin/python;
              sudo ln -s `which python3` /usr/bin/python;
              which python3;
              echo "annu1";
              python --version; uname -m; which python;
              echo "annu2";
              python get-poetry.py --preview -y;
              echo "annu21"
              pip install pytzdata;
              echo "annu3";
              source $HOME/.poetry/env;
              python --version;
              echo "annu4";
              poetry config virtualenvs.in-project true;
              echo "annu5";
              poetry run python -m pip install pip -U;
              echo "annu6";
              poetry install -vvv;
              echo "annu7";
              PENDULUM_EXTENSIONS=0 poetry run pytest -q tests;
              echo "annu8";
              poetry run pytest -q tests;
              echo "annu9";
              poetry install;"
              
              
             
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }} 
      
     
